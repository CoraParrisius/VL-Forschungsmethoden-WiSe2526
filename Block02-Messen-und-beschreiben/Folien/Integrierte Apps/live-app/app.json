[{"name":"app.R","content":"library(shiny)\nlibrary(ggplot2)\nlibrary(munsell)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(Hmisc)\nlibrary(bslib)\n \n \n \n ui <- page_sidebar(\n   theme = bs_theme(\n     base_font = \"Open Sans\",\n     heading_font = \"Open Sans\",\n     fg = \"#267326\",\n     bg = \"#F2F2F2\",\n     primary = \"#174717\"),\n   title = \"App: Verteilungen darstellen\",\n   sidebar = sidebar(\n     sliderInput(\"sample_n\", \"Größe der Stichprobe\", 1, 800, 164),\n     selectInput(\"Eigenschaft\", \"Streuung, Schiefe & Modalität:\",\n                  choices = c(\"große Streuung\" = \"große Streuung\",\n                              \"kleine Streuung\" = \"kleine Streuung\",\n                              \"Bimodalität\" = \"Bimodalität\",\n                              \"Rechtsschiefe\" = \"Rechtsschiefe\")),\n     selectInput(\n       \"plottype\",\n       \"Art der Visualisierung\",\n       c(\"Histogramm\" = \"Histogramm\",\n         \"Dotplot\" = \"Dotplot\",\n         \"Densityplot\" = \"Densityplot\",\n         \"Violinplot\" = \"Violinplot\",\n         \"Sinaplot\" = \"Sinaplot\",\n         \"Jitterplot\" = \"Jitterplot\",\n         \"Boxplot\" = \"Boxplot\",\n         \"Errorbarplot\" = \"Errorbarplot\"))\n     ),\n   card(\n     uiOutput(\"plotUI\")\n )\n \n)\n\n\nserver <- function(input, output, session) {\n # bs_themer()\n # adapt data to input\n data_subsetted <- reactive({\n   tibble(`kleine Streuung` = rbeta(input$sample_n, 30, 10)*15,\n          `große Streuung` = rbeta(input$sample_n, 9, 3)*15,\n          `Bimodalität` = c(rbeta(floor(input$sample_n/2), 38, 15)*15,\n                            rbeta(ceil(input$sample_n/2), 28, 35)*15),\n          `Rechtsschiefe` = rbeta(input$sample_n, 2, .5)*15) %>%\n     gather(Variable, Notenpunkte)%>%\n     mutate(dummy = 1) %>%\n     filter(Variable == input$Eigenschaft) %>%\n     sample_n(input$sample_n) %>%\n     mutate(Note = (Notenpunkte - 7.5) * (-6 / 15) + 4)\n })\n \n # adapt plot title to input\n subtitle_reactive <- reactive({\n   if(input$Eigenschaft == \"große Streuung\")\n     sr <- \"Verteilung mit vglw. großer Streuung\"\n   if(input$Eigenschaft == \"kleine Streuung\")\n     sr <- \"Verteilung mit vglw. kleiner Streuung\"\n   if(input$Eigenschaft == \"Bimodalität\")\n     sr <- \"Bimodale Verteilung\"\n   if(input$Eigenschaft == \"Rechtsschiefe\")\n     sr <- \"Rechtsschiefe Verteilung\"\n   return(sr)\n })\n \n output$plot <- renderPlot({\n   \n   \n   if (input$plottype == \"Dotplot\")\n     plot <-\n       ggplot(data_subsetted(), aes(x = Note)) +\n       geom_dotplot(\n         method = \"histodot\",\n         binwidth = .1,\n         right = F, # intervalls cloed to the left\n         #dotsize = .5,\n         fill = \"#267326\",\n         color = \"#267326\"\n       ) +\n       theme_minimal(base_size = 18) +\n       labs(\n         title = \"Dotplot\",\n         subtitle = paste(subtitle_reactive()),\n         y = \"Anzahl Schüler*innen\"\n       ) +\n       xlim(.5, 6.5) +\n       theme(\n         plot.background = element_rect(fill = \"#F2F2F2\",\n                                        color = \"#f2f2f2\"),\n         panel.background = element_rect(fill = \"#F2F2F2\",\n                                         color = \"#f2f2f2\")\n       )\n   \n   if (input$plottype == \"Histogramm\")\n     plot <-\n       ggplot(data_subsetted(), aes(x = Note)) +\n       geom_histogram(\n         binwidth = .5,\n         fill = \"#267326\",\n         color = \"#267326\"\n       ) +\n       theme_minimal(base_size = 18) +\n       labs(\n         title = \"Histogramm\",\n         subtitle = paste(subtitle_reactive()),\n         y = \"Anzahl Schüler*innen\"\n       ) +\n       xlim(.5, 6.5) +\n       theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n   \n   if (input$plottype == \"Boxplot\")\n     plot <-\n       ggplot(data_subsetted(), \n              aes(y = Note, x = dummy)) + \n       geom_boxplot(color = \"#267326\",\n                    fill = \"#26732620\") + \n       coord_flip() +\n       labs(\n         title = \"Boxplot\",\n         subtitle = paste(subtitle_reactive()),\n         x = \"\"\n       ) +\n       ylim(1, 6) +\n       xlim(0, 2)+\n       theme_minimal(base_size = 18) +\n       theme(axis.text.y = element_blank(),\n             plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n \n   if (input$plottype == \"Jitterplot\")\n     plot <-\n       ggplot(data_subsetted(), aes(x = Note, y = dummy)) + \n       geom_jitter(color = \"#267326\") + \n       labs(title = \"Jitterplot\",\n            subtitle = paste(subtitle_reactive()),\n            y = \"\") + \n       ylim(0,2) +\n       xlim(1,6)+\n       theme_minimal(base_size = 18) + \n       theme(axis.text.y = element_blank(),\n             plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n   \n   if (input$plottype == \"Densityplot\")\n     plot <-\n       ggplot(data_subsetted(), aes(x = Note)) + \n       geom_density(color = \"#267326\",\n                    fill = \"#26732620\") + \n       labs(title = \"Densityplot\",\n            subtitle = paste(subtitle_reactive()),\n            y = \"\") + \n       #ylim(0,2) +\n       xlim(1,6)+\n       theme_minimal(base_size = 18) + \n       theme(axis.text.y = element_blank(),\n             plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n   \n   if (input$plottype == \"Violinplot\")\n     plot <-\n       ggplot(data_subsetted(), aes(x = Note, y = dummy)) + \n       geom_violin(color = \"#267326\",\n                   fill = \"#26732620\") + \n       labs(title = \"Violinplot\",\n            subtitle = paste(subtitle_reactive()),\n            y = \"\") + \n       ylim(0,2) +\n       xlim(1,6)+\n       theme_minimal(base_size = 18) + \n       theme(axis.text.y = element_blank(),\n             plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n   \n   if (input$plottype == \"Sinaplot\")\n     plot <-\n       ggplot(data_subsetted(), aes(x = Note, y = dummy)) + \n       ggforce::geom_sina(color = \"#267326\") + \n       labs(title = \"Sinaplot\",\n            subtitle = paste(subtitle_reactive()),\n            y = \"\") + \n       ylim(0,2) +\n       xlim(1,6)+\n       theme_minimal(base_size = 18) + \n       theme(axis.text.y = element_blank(),\n             plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n   \n   if (input$plottype == \"Errorbarplot\")\n     plot <-\n       ggplot(data_subsetted(), aes(y=Note, x = dummy)) + \n       stat_summary(fun.data = mean_sdl, \n                    geom = \"linerange\", \n                    fun.args = list(mult = 1), \n                    color = \"#267326\") + \n       stat_summary(fun.y = mean, \n                    geom = \"point\",\n                    color = \"#267326\",\n                    size = 3) + \n       coord_flip() +\n       labs(title = \"Errorbarplot\",\n            subtitle = paste(subtitle_reactive()),\n            x = \"\") + \n       ylim(1,6)+\n       theme_minimal(base_size = 18) +\n       theme(axis.text.y = element_blank(),\n             plot.background = element_rect(fill = \"#F2F2F2\",\n                                            color = \"#f2f2f2\"),\n             panel.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"))\n   \n   return(plot)\n })\n \n output$plotUI <- renderUI({\n   plotOutput(\"plot\", \n              height = case_when(input$plottype == \"Dotplot\" ~ \"400px\",\n                                 input$plottype == \"Histogramm\" ~ \"400px\",\n                                 input$plottype == \"Boxplot\" ~ \"200px\",\n                                 input$plottype == \"Jitterplot\" ~ \"300px\",\n                                 input$plottype == \"Densityplot\" ~ \"400px\", \n                                 input$plottype == \"Violinplot\" ~ \"330px\",\n                                 input$plottype == \"Sinaplot\" ~ \"330px\",\n                                 input$plottype == \"Errorbarplot\" ~ \"200px\")\n   )\n })\n}\n\nshinyApp(ui = ui, server = server)","type":"text"}]
