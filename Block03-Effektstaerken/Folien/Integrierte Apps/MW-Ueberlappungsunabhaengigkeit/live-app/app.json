[{"name":"app.R","content":"library(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(Hmisc)\nlibrary(munsell)\nlibrary(thematic)\nlibrary(bslib)\nlibrary(shinyWidgets)\nlibrary(bayestestR)\nlibrary(viridis)\n\n\nui <-  page_sidebar(\n  theme = bs_theme(\n    base_font = \"Open Sans\",\n    heading_font = \"Open Sans\",\n    fg = \"#267326\",\n    bg = \"#F2F2F2\",\n    primary = \"#174717\"),\n  title = \"App: Überlappung vs. Mittelwertsdifferenz\",\n  sidebar = sidebar(\n    sliderInput(\"sample_n\", \"Größe der Stichprobe\", 1, 800, 164),\n      sliderTextInput(\n        inputId = \"form\",\n        label = \"Verteilungsform\", \n        choices = c(\"1 = umgekehrt u-förmig\", \n                    2:9, \n                    \"10 = u-förmig\"),\n        selected = \"4\"\n      ),\n      sliderTextInput(\n        inputId = \"overlap\",\n        label = \"Überlappung\", \n        choices = c(\"1 = (fast) keine\", \n                    2:9, \n                    \"10 = (fast) völlständige\"),\n        selected = \"6\"\n        \n      ),\n      numericInput(\"mean1\", \"Mittelwert Gruppe 1\", 508),\n      numericInput(\"mean2\", \"Mittelwert Gruppe 2\", 512), \n      selectInput(\n        \"plottype\",\n        \"Art der Visualisierung\",\n        c(\"Histogramm\" = \"Histogramm\",\n          \"Dotplot\" = \"Dotplot\",\n          \"Densityplot\" = \"Densityplot\",\n          \"Violinplot\" = \"Violinplot\",\n          \"Sinaplot\" = \"Sinaplot\",\n          \"Jitterplot\" = \"Jitterplot\",\n          \"Boxplot\" = \"Boxplot\",\n          \"Errorbarplot\" = \"Errorbarplot\"))\n      ),\n  \n \n  card(\n      uiOutput(\"plotUI\")\n  )\n)\n\n\nserver <- function(input, output, session) {\n  \n  shape1_shape2 <- reactive({\n    case_when(input$form == \"1 = umgekehrt u-förmig\" ~ 20,\n              input$form == \"2\" ~ 16,\n              input$form == \"3\" ~ 12,\n              input$form == \"4\" ~ 8,\n              input$form == \"5\" ~ 4,\n              input$form == \"6\" ~ 2,\n              input$form == \"7\" ~ 1,\n              input$form == \"8\" ~ .7,\n              input$form == \"9\" ~ .4,\n              input$form == \"10 = u-förmig\" ~ .2)\n  })\n  \n  range_diff <- reactive({\n    case_when(input$overlap == \"1 = (fast) keine\" ~ 2,\n              input$overlap == \"2\" ~ 1.5,\n              input$overlap == \"3\" ~ 1,\n              input$overlap == \"4\" ~ .8,\n              input$overlap == \"5\" ~ .6,\n              input$overlap == \"6\" ~ .5,\n              input$overlap == \"7\" ~ .4,\n              input$overlap == \"8\" ~ .3,\n              input$overlap == \"9\" ~ .2,\n              input$overlap == \"10 = (fast) völlständige\" ~ .1)\n  })\n\n  mean_diff <- reactive({\n    abs(input$mean1 - input$mean2)\n  })\n  \n  # adapt data to input\n  data1 <- reactive({\n    tibble(G1 = distribution_beta(input$sample_n,\n                                   shape1_shape2(), \n                                   shape1_shape2()),\n           G2 = distribution_beta(input$sample_n,\n                                   shape1_shape2(), \n                                   shape1_shape2()))\n  })\n  \n  range_emp <- reactive({max(data1()$G1) - min(data1()$G1)})\n  \n  data <- reactive({\n    tibble(\n      G1 = (data1()$G1 - .5) / (max(data1()$G1) - .5) *  # centering and range =1\n            mean_diff() * 1/range_diff() + 0.5 + input$mean1,\n      G2 = (data1()$G2 - .5) / (max(data1()$G1) - .5) *  # centering and range =1\n            mean_diff() * 1/range_diff() + 0.5 + input$mean2\n    ) %>% \n      gather(Gruppe, Ausprägung)\n  })\n  \n  \n  output$plot <- renderPlot({\n    \n    \n    if (input$plottype == \"Dotplot\")\n      plot <-\n        ggplot(data(), aes(x = Ausprägung, \n                           fill = Gruppe)) +\n        labs(title = \"Dotplot\") +\n        geom_dotplot(\n          method = \"histodot\",\n          color = \"#ffffff00\") +\n        theme_minimal(base_size = 18) +\n        scale_fill_manual(values = c(\"#26732690\", \"#d77d0090\")) +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n    \n    if (input$plottype == \"Histogramm\")\n      plot <-\n        ggplot(data(), aes(x = Ausprägung, \n                           color = Gruppe, \n                           fill = Gruppe)) + \n        geom_histogram(color = \"#26732600\",\n                       position=\"identity\") +\n        theme_minimal(base_size = 18) +\n        labs(title = \"Histogramm\") +\n        theme_minimal(base_size = 18) +\n        scale_fill_manual(values = c(\"#26732690\", \"#d77d0090\")) +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n    \n    if (input$plottype == \"Boxplot\")\n      plot <-\n        ggplot(data(), \n               aes(x = Ausprägung, y = Gruppe)) + \n        geom_boxplot(color = \"#267326\",\n                     fill = \"#26732620\") + \n        theme_minimal(base_size = 18) +\n        labs(title = \"Boxplot\") +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n  \n    if (input$plottype == \"Jitterplot\")\n      plot <-\n        ggplot(data(), \n               aes(x = Ausprägung, y = Gruppe)) + \n        geom_jitter(color = \"#267326\") + \n        theme_minimal(base_size = 18) +\n        labs(title = \"Jitterplot\")  +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n    \n    if (input$plottype == \"Densityplot\")\n      plot <-\n        ggplot(data(), aes(x = Ausprägung, \n                           color = Gruppe, \n                           fill = Gruppe)) + \n        labs(title = \"Densityplot\") +\n        theme_minimal(base_size = 18) +\n        scale_fill_manual(values = c(\"#26732650\", \"#d77d0050\")) +\n        scale_color_manual(values = c(\"#267326\", \"#d77d00\")) +\n        geom_density()  +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n      \n    \n    if (input$plottype == \"Violinplot\")\n      plot <-\n        ggplot(data(), \n               aes(x = Ausprägung, y = Gruppe)) + \n        geom_violin(color = \"#267326\",\n                     fill = \"#26732620\") + \n        theme_minimal(base_size = 18) +\n        labs(title = \"Violinplot\") +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n    \n    if (input$plottype == \"Sinaplot\")\n      plot <-\n        ggplot(data(), \n               aes(x = Ausprägung, y = Gruppe)) + \n        ggforce::geom_sina(color = \"#267326\",\n                    fill = \"#26732620\") + \n        theme_minimal(base_size = 18) +\n        labs(title = \"Violinplot\") +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n    \n    if (input$plottype == \"Errorbarplot\")\n      plot <-\n        ggplot(data(), aes(x = Ausprägung, y = Gruppe)) + \n        stat_summary(fun.data = mean_sdl, \n                     geom = \"linerange\", \n                     fun.args = list(mult = 1), \n                     width = 1.3,\n                     color = \"#267326\") + \n        stat_summary(fun.y = mean, \n                     geom = \"point\",\n                     color = \"#267326\",\n                     size = 3) + \n        theme_minimal(base_size = 18) +\n        labs(title = \"Errorbarplot\") +\n        theme(plot.background = element_rect(fill = \"#F2F2F2\",\n                                             color = \"#f2f2f2\"),\n              panel.background = element_rect(fill = \"#F2F2F2\",\n                                              color = \"#f2f2f2\"))\n    \n    return(plot)\n  })\n  \n  output$plotUI <- renderUI({\n    plotOutput(\"plot\", \n               height = case_when(input$plottype == \"Dotplot\" ~ \"400px\",\n                                  input$plottype == \"Histogramm\" ~ \"400px\",\n                                  input$plottype == \"Boxplot\" ~ \"200px\",\n                                  input$plottype == \"Jitterplot\" ~ \"300px\",\n                                  input$plottype == \"Densityplot\" ~ \"400px\",\n                                  input$plottype == \"Violinplot\" ~ \"330px\",\n                                  input$plottype == \"Sinaplot\" ~ \"330px\",\n                                  input$plottype == \"Errorbarplot\" ~ \"200px\")\n    )\n  })\n}\n\nshinyApp(ui = ui, server = server)    ","type":"text"}]
